buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'com.novoda:bintray-release:0.3.2'
    }
}

apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.novoda.bintray-release'

version = "0.4-SNAPSHOT"
group = "com.easyforger"
archivesBaseName = "easyforger-core"

tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
    scalaCompileOptions.additionalParameters = ["-language:implicitConversions"]
}

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    mappings = "stable_20"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

import com.novoda.gradle.release.*

def deobfJarPublish(String publicationName, Project project) {
    project.task(publicationName + 'DeobfJar', type: Jar) {
        classifier = 'deobf'
        from sourceSets.main.output
    }
}

publish {
    bintrayUser = project.hasProperty('myBintrayUser') ? myBintrayUser : 'bintray-user'
    bintrayKey = project.hasProperty('myBintrayKey') ? myBintrayKey : 'bintray-key'

    userOrg = 'easyforger'
    groupId = project.group
    artifactId = archivesBaseName

    publishVersion = project.version
    description = 'A DSL / Framework for developing Minecraft Forge mods.'

    website = 'https://easyforger.com'
    issueTracker = 'https://github.com/easyforger/easyforger/issues'
    repository = 'git@github.com:easyforger/easyforger.git'

    dryRun = true

    publishing {
        publications {
            deobfPublication(MavenPublication) {
                groupId project.publish.groupId
                artifactId project.publish.artifactId
                publishVersion project.publish.publishVersion

                Artifacts artifacts = new JavaArtifacts()
                (artifacts.all(it.name, project) + deobfJarPublish(it.name, project)).each {
                    delegate.artifact it
                }
                from artifacts.from(project)
            }
        }
    }

    publications = ['deobfPublication']
}
